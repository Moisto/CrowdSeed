#pragma version 8
intcblock 0 1 2 61 65536
bytecblock 0x 0x6f776e6572 0x746f74616c43616d706169676e 0x151f7c75 0x00
txn NumAppArgs
intc_0 // 0
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0xbec76d87 // "bootstrap()void"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0xe8331a11 // "read_owner()address"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x519734d6 // "read_campaigns()uint64"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x9e31f2f0 // "add_campaign(string,string,string,uint64,uint64)void"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x077cdd01 // "approveCampaign(string)(string,string,uint64,uint64,uint64,address,bool)"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0xc930f21e // "get_campaign(string)(string,string,uint64,uint64,uint64,address,bool)"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0xd408f154 // "send_algo_from_escrow(account,uint64)void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x14588d41 // "fund_campaign(pay,string)void"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x963a596e // "fund_escrow_address(pay)void"
==
bnz main_l11
err
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub fundescrowaddresscaster_18
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub fundcampaigncaster_17
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub sendalgofromescrowcaster_16
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getcampaigncaster_15
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub approveCampaigncaster_14
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub addcampaigncaster_13
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readcampaignscaster_12
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readownercaster_11
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub bootstrapcaster_10
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l22
err
main_l22:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// bootstrap
bootstrap_0:
proto 0 0
intc_0 // 0
bytec_1 // "owner"
app_global_get_ex
store 1
store 0
load 1
!
assert
bytec_1 // "owner"
txn Sender
app_global_put
bytec_2 // "totalCampaign"
intc_0 // 0
app_global_put
retsub

// is_owner
isowner_1:
proto 1 1
txn Sender
bytec_1 // "owner"
app_global_get
==
retsub

// read_owner
readowner_2:
proto 0 1
bytec_0 // ""
txn Sender
callsub isowner_1
// unauthorized
assert
bytec_1 // "owner"
app_global_get
frame_bury 0
frame_dig 0
len
pushint 32 // 32
==
assert
retsub

// read_campaigns
readcampaigns_3:
proto 0 1
intc_0 // 0
bytec_2 // "totalCampaign"
app_global_get
frame_bury 0
retsub

// add_campaign
addcampaign_4:
proto 5 0
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig 0
frame_bury 0
frame_dig 1
frame_bury 1
frame_dig 2
frame_bury 2
intc_0 // 0
frame_bury 3
frame_dig 4
frame_bury 4
txn Sender
frame_bury 5
frame_dig 5
len
pushint 32 // 32
==
assert
intc_0 // 0
!
!
frame_bury 6
frame_dig 0
frame_bury 11
frame_dig 11
frame_bury 10
intc_3 // 61
frame_bury 8
frame_dig 8
frame_dig 11
len
+
frame_bury 9
frame_dig 9
intc 4 // 65536
<
assert
frame_dig 8
itob
extract 6 0
frame_dig 1
frame_bury 11
frame_dig 10
frame_dig 11
concat
frame_bury 10
frame_dig 9
frame_bury 8
frame_dig 8
itob
extract 6 0
concat
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 6
setbit
concat
frame_dig 10
concat
frame_bury 7
frame_dig -5
extract 2 0
box_del
pop
frame_dig -5
extract 2 0
frame_dig 7
box_put
bytec_2 // "totalCampaign"
bytec_2 // "totalCampaign"
app_global_get
intc_1 // 1
+
app_global_put
retsub

// approveCampaign
approveCampaign_5:
proto 1 1
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
txn Sender
callsub isowner_1
// unauthorized
assert
frame_dig -1
extract 2 0
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 1
intc_1 // 1
!
!
frame_bury 2
frame_dig 1
frame_dig 1
intc_0 // 0
extract_uint16
frame_dig 1
intc_2 // 2
extract_uint16
substring3
frame_bury 3
frame_dig 1
frame_dig 1
intc_2 // 2
extract_uint16
dig 1
len
substring3
frame_bury 4
frame_dig 1
pushint 4 // 4
extract_uint64
frame_bury 5
frame_dig 1
pushint 12 // 12
extract_uint64
frame_bury 6
frame_dig 1
pushint 20 // 20
extract_uint64
frame_bury 7
frame_dig 1
extract 28 32
frame_bury 8
frame_dig 3
frame_bury 12
frame_dig 12
frame_bury 11
intc_3 // 61
frame_bury 9
frame_dig 9
frame_dig 12
len
+
frame_bury 10
frame_dig 10
intc 4 // 65536
<
assert
frame_dig 9
itob
extract 6 0
frame_dig 4
frame_bury 12
frame_dig 11
frame_dig 12
concat
frame_bury 11
frame_dig 10
frame_bury 9
frame_dig 9
itob
extract 6 0
concat
frame_dig 5
itob
concat
frame_dig 6
itob
concat
frame_dig 7
itob
concat
frame_dig 8
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 2
setbit
concat
frame_dig 11
concat
frame_bury 1
frame_dig -1
extract 2 0
box_del
pop
frame_dig -1
extract 2 0
frame_dig 1
box_put
frame_dig -1
extract 2 0
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 0
retsub

// get_campaign
getcampaign_6:
proto 1 1
bytec_0 // ""
frame_dig -1
extract 2 0
box_get
store 7
store 6
load 7
assert
load 6
frame_bury 0
retsub

// send_algo_from_escrow
sendalgofromescrow_7:
proto 2 0
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig -2
txnas Accounts
itxn_field Receiver
frame_dig -1
itxn_field Amount
itxn_submit
retsub

// fund_campaign
fundcampaign_8:
proto 2 0
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
intc_0 // 0
dupn 3
bytec_0 // ""
dup
frame_dig -2
gtxns Amount
intc_0 // 0
>
// Invalid amount, receiver or type_enum.
assert
frame_dig -2
gtxns Receiver
global CurrentApplicationAddress
==
// Invalid amount, receiver or type_enum.
assert
frame_dig -2
gtxns TypeEnum
intc_1 // pay
==
// Invalid amount, receiver or type_enum.
assert
frame_dig 0
frame_dig 0
intc_0 // 0
extract_uint16
frame_dig 0
intc_2 // 2
extract_uint16
substring3
frame_bury 1
frame_dig 0
frame_dig 0
intc_2 // 2
extract_uint16
dig 1
len
substring3
frame_bury 2
frame_dig 0
pushint 4 // 4
extract_uint64
frame_bury 3
frame_dig 0
pushint 20 // 20
extract_uint64
frame_bury 4
frame_dig 0
extract 28 32
frame_bury 5
frame_dig 0
pushint 480 // 480
getbit
frame_bury 6
frame_dig 0
pushint 12 // 12
extract_uint64
frame_bury 7
frame_dig 7
frame_dig -2
gtxns Amount
+
frame_bury 7
frame_dig 1
frame_bury 11
frame_dig 11
frame_bury 10
intc_3 // 61
frame_bury 8
frame_dig 8
frame_dig 11
len
+
frame_bury 9
frame_dig 9
intc 4 // 65536
<
assert
frame_dig 8
itob
extract 6 0
frame_dig 2
frame_bury 11
frame_dig 10
frame_dig 11
concat
frame_bury 10
frame_dig 9
frame_bury 8
frame_dig 8
itob
extract 6 0
concat
frame_dig 3
itob
concat
frame_dig 7
itob
concat
frame_dig 4
itob
concat
frame_dig 5
concat
bytec 4 // 0x00
intc_0 // 0
frame_dig 6
setbit
concat
frame_dig 10
concat
frame_bury 0
frame_dig -1
extract 2 0
box_del
pop
frame_dig -1
extract 2 0
frame_dig 0
box_put
retsub

// fund_escrow_address
fundescrowaddress_9:
proto 1 0
frame_dig -1
gtxns Amount
intc_0 // 0
>
// Invalid amount, receiver or type_enum.
assert
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
// Invalid amount, receiver or type_enum.
assert
frame_dig -1
gtxns TypeEnum
intc_1 // pay
==
// Invalid amount, receiver or type_enum.
assert
retsub

// bootstrap_caster
bootstrapcaster_10:
proto 0 0
callsub bootstrap_0
retsub

// read_owner_caster
readownercaster_11:
proto 0 0
bytec_0 // ""
callsub readowner_2
frame_bury 0
bytec_3 // 0x151f7c75
frame_dig 0
concat
log
retsub

// read_campaigns_caster
readcampaignscaster_12:
proto 0 0
intc_0 // 0
callsub readcampaigns_3
frame_bury 0
bytec_3 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// add_campaign_caster
addcampaigncaster_13:
proto 0 0
bytec_0 // ""
dupn 2
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
frame_bury 2
txna ApplicationArgs 4
btoi
frame_bury 3
txna ApplicationArgs 5
btoi
frame_bury 4
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub addcampaign_4
retsub

// approveCampaign_caster
approveCampaigncaster_14:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub approveCampaign_5
frame_bury 0
bytec_3 // 0x151f7c75
frame_dig 0
concat
log
retsub

// get_campaign_caster
getcampaigncaster_15:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub getcampaign_6
frame_bury 0
bytec_3 // 0x151f7c75
frame_dig 0
concat
log
retsub

// send_algo_from_escrow_caster
sendalgofromescrowcaster_16:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
frame_dig 0
frame_dig 1
callsub sendalgofromescrow_7
retsub

// fund_campaign_caster
fundcampaigncaster_17:
proto 0 0
intc_0 // 0
bytec_0 // ""
txna ApplicationArgs 1
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
frame_dig 1
callsub fundcampaign_8
retsub

// fund_escrow_address_caster
fundescrowaddresscaster_18:
proto 0 0
intc_0 // 0
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
callsub fundescrowaddress_9
retsub